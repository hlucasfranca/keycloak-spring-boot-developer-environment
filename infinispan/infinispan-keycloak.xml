<config:infinispan xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                   xmlns:config="urn:infinispan:config:13.0"
                   xmlns:serv="urn:infinispan:server:13.0"
                   xsi:schemaLocation="urn:infinispan:config:13.0 http://www.infinispan.org/schemas/infinispan-config-13.0.xsd urn:infinispan:server:13.0 http://www.infinispan.org/schemas/infinispan-server-13.0.xsd">

    <config:cache-container name="default" statistics="true">
        <!-- TODO revise jgroups stack to use -->

        <serialization marshaller="org.infinispan.jboss.marshalling.commons.GenericJBossMarshaller">
            <allow-list>
                <regex>org.keycloak.*</regex>
            </allow-list>
        </serialization>

        <transport
                cluster="${infinispan.cluster.name:cluster}"
                stack="${infinispan.cluster.stack:udp}"
                node-name="${infinispan.node.name:}"/>

        <replicated-cache-configuration name="replicated-cache-cfg" >
            <encoding>
                <key media-type="application/x-jboss-marshalling"/>
                <value media-type="application/x-jboss-marshalling"/>
            </encoding>

            <expiration lifespan="900000000000000000"/>
        </replicated-cache-configuration>

        <distributed-cache-configuration name="distributed-cache-cfg">
            <encoding>
                <key media-type="application/x-jboss-marshalling"/>
                <value media-type="application/x-jboss-marshalling"/>
            </encoding>

            <expiration lifespan="900000000000000000"/>
        </distributed-cache-configuration>

        <replicated-cache name="work" configuration="replicated-cache-cfg">
        </replicated-cache>

        <distributed-cache name="sessions" owners="2" configuration="distributed-cache-cfg">
            <persistence passivation="true">
                <!-- purge="false" fetch-state="false" see:  https://infinispan.org/docs/stable/titles/configuring/configuring.html#configuring_cache_stores-persistence-->
                <file-store preload="true" purge="false" fetch-state="false" path="../mydata/sessions">
                </file-store>
            </persistence>
        </distributed-cache>

        <distributed-cache name="authenticationSessions" owners="2" configuration="distributed-cache-cfg">
        </distributed-cache>

        <distributed-cache name="offlineSessions" owners="2"  configuration="distributed-cache-cfg">
        </distributed-cache>

        <distributed-cache name="clientSessions" owners="2"  configuration="distributed-cache-cfg">
        </distributed-cache>

        <distributed-cache name="offlineClientSessions" owners="2" configuration="distributed-cache-cfg">
        </distributed-cache>

        <distributed-cache name="loginFailures" owners="2" configuration="distributed-cache-cfg">
        </distributed-cache>

        <distributed-cache name="actionTokens" owners="2" configuration="distributed-cache-cfg">
            <memory>
                <!--  <heap-memory size="-1"/> wildfly specific? -->
                <object/>
            </memory>
            <expiration interval="300000" max-idle="-1"/>
        </distributed-cache>
    </config:cache-container>


    <serv:server>
        <serv:interfaces>
            <serv:interface name="public">
                <serv:inet-address value="${infinispan.bind.address:0.0.0.0}"/>
            </serv:interface>
        </serv:interfaces>

        <serv:socket-bindings default-interface="public" port-offset="0">
            <serv:socket-binding name="default" port="11222"/>
        </serv:socket-bindings>

        <serv:security>
            <serv:security-realms>
                <serv:security-realm name="default">
                    <serv:properties-realm groups-attribute="Roles">
                        <serv:user-properties path="users.properties" relative-to="infinispan.server.config.path"/>
                        <serv:group-properties path="groups.properties" relative-to="infinispan.server.config.path"/>
                    </serv:properties-realm>
                </serv:security-realm>
            </serv:security-realms>
        </serv:security>

        <endpoints>
            <endpoint socket-binding='default' security-realm="default">
                <hotrod-connector name="hotrod"/>
                <rest-connector name="rest"/>
            </endpoint>
        </endpoints>

    </serv:server>

</config:infinispan>